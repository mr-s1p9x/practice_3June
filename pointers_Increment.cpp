#include <iostream>
using namespace std;

// Арифметика указателей

int main()
{
    cout << "Enter the integer number: ";
    int count = 0; // кол-во элементов, которое нужно ввести
    cin >> count;

    int* block = new int[count]; // выделяем память под эти элементы, через count задаем кол-во
    // pBlock указывает на начало массива
    int* pBlock = block; // объявляем указатель, ссылающийся на блок, адрес памяти

    //cout << block << " <- Block" << endl;

    cout << "Fill the block: " << endl;

    // Каждое введенное значение будет занимать определенное кол-во байт
    // В нашем случае - 8 байт, 1 значение
    for (int i = 0; i < count; i++)
    {
        cout << "Enter number: ";
        // Когда мы к указателю прибавляем какое-то значение, было 100, добавили, то не будет 101
        // Система будет считать по байтам, т.е если было 100, след элемент уже будет 108 итд.
        // Адрес памяти увеличивается на занимаемое кол-во памяти, типом на который указывает этот указатель
        // т.е значение увеличится на 8 байт (ибо архитектура х64 в нашем случае)
        // Пример арифметики указателей: block + i сдвигает указатель на i элементов вперед
        // Разыменование этого адреса (*(block + i)) позволяет записать значение по этому адресу
        cin >> *(block + i); // Т.е тут мы СНАЧАЛА увеличиваем адрес памяти на единицу, а ПОТОМ разыменовываем значение
    }

    cout << "Display all numbers in block: " << endl;
    for (int i = 0; i < count; i++ )
    {
        // pBlock - это наш указатель на указатель
        // он также само проходится по адресам памяти ссылаясь на адреса block, увеличиваясь каждый раз на 8
        // А потом операцией разыменовывания выводит значения через пробелы
        cout << *(pBlock++) << " ";
    }
    cout << endl;

    delete[] block; // освобождаем память

    return 0;
}